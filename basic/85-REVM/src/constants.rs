use ethers::{
  prelude::Lazy,
  types::{Address, Bytes},
};
use std::str::FromStr;

pub fn get_env(key: &str) -> String {
  std::env::var(key).unwrap()
}

#[derive(Debug, Clone)]
pub struct Env {
  pub https_url: String,
  pub wss_url: String,
}

impl Env {
  pub fn new() -> Self {
      Env {
          https_url: get_env("HTTPS_URL"),
          wss_url: get_env("WSS_URL"),
      }
  }
}

pub static ZERO_ADDRESS: Lazy<Address> =
    Lazy::new(|| Address::from_str("0x0000000000000000000000000000000000000000").unwrap());

pub static SIMULATOR_CODE: Lazy<Bytes> = Lazy::new(|| {
    "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063054d50d41461003b57806364bfce6f14610061575b600080fd5b61004e6100493660046106e4565b610089565b6040519081526020015b60405180910390f35b61007461006f36600461072c565b6101ae565b60408051928352602083019190915201610058565b60008084116100f35760405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201526a1394155517d05353d5539560aa1b60648201526084015b60405180910390fd5b6000831180156101035750600082115b6101605760405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c604482015267495155494449545960c01b60648201526084016100ea565b600061016e856103e561078f565b9050600061017c848361078f565b905060008261018d876103e861078f565b61019791906107a6565b90506101a381836107b9565b979650505050505050565b6000806101c56001600160a01b03851686886104ef565b600080600080886001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022d91906107f2565b506001600160701b031691506001600160701b03169150866001600160a01b0316886001600160a01b0316101561026957819350809250610270565b8093508192505b50506040516370a0823160e01b81526001600160a01b03888116600483015260009184918916906370a0823190602401602060405180830381865afa1580156102bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e19190610842565b6102eb919061085b565b604051630153543560e21b8152600481018290526024810185905260448101849052909150309063054d50d490606401602060405180830381865afa158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c9190610842565b6040516370a0823160e01b81523060048201529095506000906001600160a01b038816906370a0823190602401602060405180830381865afa1580156103a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ca9190610842565b9050600080886001600160a01b03168a6001600160a01b0316106103f0578760006103f4565b6000885b6040805160008152602081019182905263022c0d9f60e01b90915291935091506001600160a01b038c169063022c0d9f906104389085908590309060248101610892565b600060405180830381600087803b15801561045257600080fd5b505af1158015610466573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201528592506001600160a01b038c1691506370a0823190602401602060405180830381865afa1580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d49190610842565b6104de919061085b565b965050505050505094509492505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610541908490610546565b505050565b600061055b6001600160a01b038416836105a9565b9050805160001415801561058057508080602001905181019061057e91906108e2565b155b1561054157604051635274afe760e01b81526001600160a01b03841660048201526024016100ea565b60606105b7838360006105c0565b90505b92915050565b6060814710156105e55760405163cd78605960e01b81523060048201526024016100ea565b600080856001600160a01b031684866040516106019190610904565b60006040518083038185875af1925050503d806000811461063e576040519150601f19603f3d011682016040523d82523d6000602084013e610643565b606091505b509150915061065386838361065f565b925050505b9392505050565b6060826106745761066f826106bb565b610658565b815115801561068b57506001600160a01b0384163b155b156106b457604051639996b31560e01b81526001600160a01b03851660048201526024016100ea565b5080610658565b8051156106cb5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6000806000606084860312156106f957600080fd5b505081359360208301359350604090920135919050565b80356001600160a01b038116811461072757600080fd5b919050565b6000806000806080858703121561074257600080fd5b8435935061075260208601610710565b925061076060408601610710565b915061076e60608601610710565b905092959194509250565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176105ba576105ba610779565b808201808211156105ba576105ba610779565b6000826107d657634e487b7160e01b600052601260045260246000fd5b500490565b80516001600160701b038116811461072757600080fd5b60008060006060848603121561080757600080fd5b610810846107db565b925061081e602085016107db565b9150604084015163ffffffff8116811461083757600080fd5b809150509250925092565b60006020828403121561085457600080fd5b5051919050565b818103818111156105ba576105ba610779565b60005b83811015610889578181015183820152602001610871565b50506000910152565b84815283602082015260018060a01b038316604082015260806060820152600082518060808401526108cb8160a085016020870161086e565b601f01601f19169190910160a00195945050505050565b6000602082840312156108f457600080fd5b8151801515811461065857600080fd5b6000825161091681846020870161086e565b919091019291505056fea26469706673582212201d6da94f2d6ac0535f5153da5aac14a1f6ef19d15801986cfe2b2d6fab019c6564736f6c63430008140033"
        .parse()
        .unwrap()
});